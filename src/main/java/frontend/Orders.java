package frontend;


import com.csc.OrderWriter;
import com.csc.SqlDatabase;
import com.csc.model.Order;

import javax.swing.table.DefaultTableCellRenderer;

import java.awt.Component;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.BorderFactory;
import javax.swing.table.DefaultTableModel;

import javax.swing.JOptionPane;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @author ssb7848
 */
public class Orders extends javax.swing.JFrame {

  private SqlDatabase db;

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnExit;
  private javax.swing.JButton btnModify;
  private javax.swing.JButton btnRemoveOrder;
  private javax.swing.JButton btnUpdate;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lblSearch;
  private javax.swing.JTable tblOrders;
  private javax.swing.JTextField tbxSearch;
  /**
   * Creates new form Orders
   */
  public Orders(SqlDatabase db) {
    this.db = db;
    initComponents();
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[], SqlDatabase db) {
        /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException | javax.swing.UnsupportedLookAndFeelException | IllegalAccessException | InstantiationException ex) {
      java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

        /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> new Orders(db).setVisible(true));
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    tblOrders = new javax.swing.JTable();
    jLabel1 = new javax.swing.JLabel();
    jPanel1 = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    tbxSearch = new javax.swing.JTextField();
    btnUpdate = new javax.swing.JButton();
    btnRemoveOrder = new javax.swing.JButton();
    lblSearch = new javax.swing.JLabel();
    btnModify = new javax.swing.JButton();
    btnExit = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setBackground(new java.awt.Color(255, 204, 153));
    setForeground(java.awt.Color.pink);

    tblOrders.setForeground(new java.awt.Color(0, 0, 255));
    tblOrders.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null}
        },
        new String[] {
            "Order ID", "Customer Id", "EmployeeWindow Id", "Destination", "Origen Zip", "Status", "Received", "Shipped", "Delivered"
        }
    ));
    tblOrders.setColumnSelectionAllowed(true);
    tblOrders.setEnabled(false);
    jScrollPane1.setViewportView(tblOrders);

    jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
    jLabel1.setText("Order Menu");

    jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

    jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
    jLabel2.setText("Orders Edit");
    jLabel2.setToolTipText("");

    tbxSearch.addActionListener(this::tbxSearchActionPerformed);

    btnUpdate.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
    btnUpdate.setText("Update");
    btnUpdate.addActionListener(this::btnUpdateActionPerformed);

    btnRemoveOrder.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
    btnRemoveOrder.setText("remove Order");
    btnRemoveOrder.addActionListener(this::btnRemoveOrderActionPerformed);

    lblSearch.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
    lblSearch.setText("Search");

    btnModify.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
    btnModify.setText("Modify");
    btnModify.addActionListener(this::btnModifyActionPerformed);

/*    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdate)
                            .addComponent(btnRemoveOrder)
                            .addComponent(btnModify))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(69, 69, 69))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(210, Short.MAX_VALUE)
                .addComponent(lblSearch)
                .addGap(18, 18, 18)
                .addComponent(tbxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(14, 14, 14)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveOrder)
                .addGap(18, 18, 18)
                .addComponent(btnModify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch))
                .addContainerGap(34, Short.MAX_VALUE))
    );*/

    btnExit.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
    btnExit.setText("Exit");
    btnExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    btnExit.addActionListener(this::btnExitActionPerformed);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(165, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
    );

    updateTable();
    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
    // TODO add your handling code here:

    dispose();
  }//GEN-LAST:event_btnExitActionPerformed

  public void removeSelectedFromTable(JTable tblOrders) {

    DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
    int indexes[] = tblOrders.getSelectedRows();
    int res = 0;
    for (int i = 0; i < indexes.length; i++) {
      res += (i > 0) ? (indexes[i] - indexes[i - 1] - 1) : 0;
      int index = tblOrders.convertRowIndexToModel(indexes[0] + res);
      model.removeRow(index);
    }
  }

  private void tbxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxSearchActionPerformed
    // TODO add your handling code here:
    String value = tbxSearch.getText();

    for (int row = 0; row <= tblOrders.getRowCount() - 1; row++) {

      for (int col = 0; col <= tblOrders.getColumnCount() - 1; col++) {

        if (value.equals(tblOrders.getValueAt(row, col))) {

          // this will automatically set the view of the scroll in the location of the value
          tblOrders.scrollRectToVisible(tblOrders.getCellRect(row, 0, true));

          // this will automatically set the focus of the searched/selected row/value
          tblOrders.setRowSelectionInterval(row, row);

          for (int i = 0; i <= tblOrders.getColumnCount() - 1; i++) {

            tblOrders.getColumnModel().getColumn(i).setCellRenderer(new HighlightRenderer());
          }
        }
      }
    }

  }//GEN-LAST:event_tbxSearchActionPerformed

  private void btnRemoveOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrderActionPerformed
    // TODO add your handling code here:
    DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
    try {
      int SelectedRowIndex = tblOrders.getSelectedRow();
      model.removeRow(SelectedRowIndex);

    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex);
    }

  }//GEN-LAST:event_btnRemoveOrderActionPerformed

  private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
    // TODO add your handling code here:
    tblOrders.setEnabled(rootPaneCheckingEnabled);
    tblOrders.isEditing();
  }//GEN-LAST:event_btnModifyActionPerformed

  private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    // TODO add your handling code here:
    tblOrders.setEnabled(false
    );
  }//GEN-LAST:event_btnUpdateActionPerformed

  private class HighlightRenderer extends DefaultTableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

      // everything as usual
      super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

      // added behavior
      if (row == table.getSelectedRow()) {

        // this will customize that kind of border that will be use to highlight a row
        setBorder(BorderFactory.createMatteBorder(2, 1, 2, 1, Color.BLACK));
      }

      return this;
    }
  }
  // End of variables declaration//GEN-END:variables

  public void updateTable() {
    OrderWriter writer = new OrderWriter(db);
    List<Order> orders = new ArrayList<>();
    try {
      orders = writer.allOrders();
    } catch (SQLException e) {
      e.printStackTrace();
    }

    Object[][] ordersArr = new Object[orders.size()][];

    for (int i = 0; i < ordersArr.length; i++) {
      ordersArr[i] = ordersToArray(orders.get(i));
    }

    tblOrders.setModel(new DefaultTableModel(ordersArr, new String[] {"Order ID", "Customer Id",
        "EmployeeWindow Id", "Destination", "Origin Zip", "Status", "Received", "Shipped" }));
  }

  private Object[] ordersToArray(Order o) {
    return new Object[] {o.getOid(), o.getCid(), o.getEid(), o.getDestinationZip(), o.getOriginZip(),
    o.getStatus(), o.getReceiveDate(), o.getShippedDate() };
  }
}
